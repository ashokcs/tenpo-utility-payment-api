# server
server.port = 80

# bills
bills.recently-paid.minus-minutes = 10

# db access
spring.datasource.url = jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}?connectTimeout=10&socketTimeout=10
spring.datasource.username = ${DB_USER}
spring.datasource.password = ${DB_PASS}

# async
spring.task.execution.pool.core-size = 8
spring.task.execution.pool.max-threads = 20
spring.task.execution.pool.max-size = 20
spring.task.execution.pool.queue-capacity = 100
spring.task.execution.pool.keep-alive = 60s

# multicaja
multicaja.utilities.apikey = nG5bJJslxuEqzrNHJMOGsqtp1OGGJdFN
multicaja.utilities.url = http://tenpo-utility-payments-mocks-svc.tenpo-utility-payments.svc.cluster.local/mocks/bill_payment/agreements_data
multicaja.utilities.debt.url = http://tenpo-utility-payments-mocks-svc.tenpo-utility-payments.svc.cluster.local/mocks/bill_payment/debt_data

# job
job.max.attempts = 10

# nats
nats.cluster.url = nats://tenpo-utility-payments-nats-cluster.tenpo-utility-payments.svc.cluster.local:4222
nats.cluster.id = tenpo-utility-payments-nats-streaming-cluster
nats.client.id = ${MY_POD_NAME:tenpo-utility-payment-api}

nats.subject.transaction-created = tenpo.utility.transaction.created
nats.subject.suggestions.enabled = tenpo.utility.suggestions.enabled

# prepaid
prepaid.balance.url = http://20.50.1.4:31400/prepaid/1.0/prepaid/{user_id}/account/{account_id}/balance

# account-ms
account-ms.account.url = http://172.11.0.133:8080/v1/account-management/accounts/user/{user_id}
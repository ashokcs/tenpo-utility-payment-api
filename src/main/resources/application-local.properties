# server
server.port = 7721
time-zone.offset = -4

# db access
spring.datasource.url = jdbc:postgresql://localhost:5432/tenpo?connectTimeout=10&socketTimeout=10
spring.datasource.username = tenpo
spring.datasource.password = tenpo

# async
spring.task.execution.pool.core-size = 8
spring.task.execution.pool.max-threads = 20
spring.task.execution.pool.max-size = 20
spring.task.execution.pool.queue-capacity = 100
spring.task.execution.pool.keep-alive = 60s

# multicaja
multicaja.utilities.apikey = nG5bJJslxuEqzrNHJMOGsqtp1OGGJdFN
multicaja.utilities.url = https://tenpo.dev.multicajadigital.cloud/mocks/bill_payment/agreements_data
multicaja.utilities.debt.url = https://tenpo.dev.multicajadigital.cloud/mocks/bill_payment/debt_data
multicaja.utilities.confirm.url = https://tenpo.dev.multicajadigital.cloud/mocks/bill_payment/confirm_payment

# job
job.max.attempts = 10

# nats
nats.cluster.url = nats://localhost:4222
nats.cluster.id = tenpo-utility-payment-cluster
nats.client.id = ${MY_POD_NAME:tenpo-utility-payment-api}

nats.subject.transaction-created = tenpo.utility.transaction.created